Textures and Rendering
======================

Textures are global variables, they load when :code:`load_textures(...)` called
and stays in memory until :code:`free_textures()` called. There are two themes,
there is a global variable called :code:`theme` stores current theme. When
:code:`load_textures(...)` called, it loads current themes files as textures.
Core sdl does not capable of font rendering. So i used prepared assets for text and
wrote custom rendering function for numbers. It turns numbers to string, then iterates
and pair each character a part of digits texture.

.. code-block:: C

  void render_number(SDL_Renderer * renderer, int num, Point c, int size, int len){
    int i,w,h;
    SDL_Rect source,dest;
    char text[100];
    SDL_QueryTexture(tDigits,NULL,NULL,&w,&h);
    sprintf(text,"%0*d",len,num);
    for(i=0;i<len;i++){
      dest.h=size;
      dest.w=size;
      dest.x=c.x+i*size;
      dest.y=c.y;
      source.y=0;
      source.w=w/10;
      source.h=h;
      switch (text[i]) {
        case '1': source.x=source.w; break;
        case '2': source.x=source.w*2; break;
        case '3': source.x=source.w*3; break;
        case '4': source.x=source.w*4; break;
        case '5': source.x=source.w*5; break;
        case '6': source.x=source.w*6; break;
        case '7': source.x=source.w*7; break;
        case '8': source.x=source.w*8; break;
        case '9': source.x=source.w*9; break;
        case '0': source.x=0; break;
      }
      SDL_RenderCopy(renderer,tDigits,&source,&dest);
    }
  }
